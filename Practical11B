def Binary_search(stud_list , key):
    start = 0
    end = len(stud_list) - 1


    while (start < end):
        mid = start + (end - start) // 2
        if (key == stud_list[mid]):
            print("Student attended the training program")
            return
        elif (key > stud_list[mid]):
            start = mid + 1
        else:
            end = mid - 1
    print("Student was absent ")


def Fibonacci_search(arr, key, n):

        # Initialize fibonacci numbers
        fibMMm2 = 0  # (m-2)'th Fibonacci No.
        fibMMm1 = 1  # (m-1)'th Fibonacci No.
        fibM = fibMMm2 + fibMMm1  # m'th Fibonacci

        # fibM is going to store the smallest
        # Fibonacci Number greater than or equal to n
        while (fibM < n):
            fibMMm2 = fibMMm1
            fibMMm1 = fibM
            fibM = fibMMm2 + fibMMm1

        # Marks the eliminated range from front
        offset = -1

        # while there are elements to be inspected.
        # Note that we compare arr[fibMm2] with x.
        # When fibM becomes 1, fibMm2 becomes 0
        while (fibM > 1):

            # Check if fibMm2 is a valid location
            i = min(offset + fibMMm2, n - 1)

            # If x is greater than the value at
            # index fibMm2, cut the subarray array
            # from offset to i
            if (arr[i] < key):
                fibM = fibMMm1
                fibMMm1 = fibMMm2
                fibMMm2 = fibM - fibMMm1
                offset = i

            # If x is less than the value at
            # index fibMm2, cut the subarray
            # after i+1
            elif (arr[i] > key):
                fibM = fibMMm2
                fibMMm1 = fibMMm1 - fibMMm2
                fibMMm2 = fibM - fibMMm1

            # element found. return index
            else:
                return i

            # comparing the last element with x */
        if (fibMMm1 and arr[n - 1] == key):
            return n - 1

        # element not found. return -1
        return -1



stud_list = [1,2,4,9,11,15,18,19,34,43,49]
n = len(stud_list)


ch = "yes"
while (ch == "yes"):
    key = int(input("Enter student roll no. to check whether he/she attended the training program : "))
    choice = int(input("1. Binary Search \n2. Finonacci Search"))
    if (choice == 1):
        Binary_search(stud_list , key )
    elif (choice == 2):
        ind = Fibonacci_search(stud_list, key, n)
        if ind >= 0:
            print("Found at index:", ind)
        else:
            print(key, "isn't present in the array");
    else :
        print("Invalid Input")

    ch = input("Do you want to continue [yes/no] : ")
